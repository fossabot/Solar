<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_a_scene_script_8cpp" kind="file" language="C++">
    <compoundname>ASceneScript.cpp</compoundname>
    <includes refid="_a_scene_script_8hpp" local="yes">ASceneScript.hpp</includes>
    <includes refid="_scene_8hpp" local="yes">Scene.hpp</includes>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ASceneScript.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Scene.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Solar::ASceneScript::setScene(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::weak_ptr&lt;Scene&gt;<sp/>&amp;scene)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scene<sp/>=<sp/>scene;</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Solar::ASceneScript::receive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_solar_1_1_system_1_1_event" kindref="compound">Solar::System::Event</ref><sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Solar::Entity&gt;<sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Solar::ASceneScript::receive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_solar_1_1_system_1_1_event" kindref="compound">Solar::System::Event</ref><sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Solar::ASceneScript::init()<sp/>{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Solar::ASceneScript::destroy()<sp/>{}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Solar::ASceneScript::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeIdx<sp/>&amp;)<sp/>{}</highlight></codeline>
    </programlisting>
    <location file="/home/mewen/Desktop/Programmation/C++/ECS/Solar/src/ASceneScript.cpp"/>
  </compounddef>
</doxygen>
